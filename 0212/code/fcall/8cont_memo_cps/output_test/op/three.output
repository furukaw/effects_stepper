Step 0:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle ((B ((fun d -> d) (fun e -> e))) (fun f -> f))))))))
Step 1:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle ((B (fun e -> e)) (fun f -> f))))))))
Step 1:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle ((B (fun e -> e)) (fun f -> f))))))))
Step 2:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) ((fun y => (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle (y (fun f -> f)))))) (fun e -> e)))))
Step 2:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) ((fun y => (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle (y (fun f -> f)))))) (fun e -> e)))))
Step 3:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle ((fun e -> e) (fun f -> f))))))))
Step 3:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle ((fun e -> e) (fun f -> f))))))))
Step 4:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle (fun f -> f)))))))
Step 4:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (with (handler {return x -> x, C(x; k) -> (k x)}) handle (fun f -> f)))))))
Step 5:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (fun f -> f))))))
Step 5:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle ((fun c -> c) (fun f -> f))))))
Step 6:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle (fun f -> f)))))
Step 6:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (with (handler {return x -> x, B(x; k) -> (k x)}) handle (fun f -> f)))))
Step 7:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (fun f -> f))))
Step 7:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle ((fun b -> b) (fun f -> f))))
Step 8:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle (fun f -> f)))
Step 8:  ((fun a -> a) (with (handler {return x -> x, A(x; k) -> (k x)}) handle (fun f -> f)))
Step 9:  ((fun a -> a) (fun f -> f))
Step 9:  ((fun a -> a) (fun f -> f))
Step 10:  (fun f -> f)
Result:  (fun f -> f)
